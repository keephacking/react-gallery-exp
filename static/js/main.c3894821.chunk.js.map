{"version":3,"sources":["components/Html5Gallery.js","components/Slider.js","App.js","components/Lightgallery.js","serviceWorker.js","index.js"],"names":["html5gallery","react_default","a","createElement","style","display","className","data-skin","data-width","data-height","href","src","alt","Component","Slider","window","$","this","refs","flexslider","animation","animationLoop","itemWidth","itemMargin","pausePlay","start","slider","removeClass","ref","App","id","role","Html5Gallery_html5gallery","Slider_Slider","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c3894821.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class html5gallery extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"none\" }} className=\"html5gallery\" data-skin=\"horizontal\" data-width=\"480\" data-height=\"272\">\r\n        <a href=\"images/Tulip_large.jpg\">\r\n          <img src=\"images/Tulip_small.jpg\" alt=\"Tulips\" />\r\n        </a>\r\n        <a href=\"images/Swan_large.jpg\">\r\n          <img src=\"images/Swan_small.jpg\" alt=\"Swan on Lake\" />\r\n        </a>\r\n        <a href=\"images/Big_Buck_Bunny.mp4\">\r\n          <img src=\"images/Big_Buck_Bunny.jpg\" alt=\"Big Buck Bunny, Copyright Blender Foundation\" />\r\n        </a>\r\n        <a href=\"http://www.youtube.com/embed/YE7VzlLtp-4\">\r\n          <img src=\"http://img.youtube.com/vi/YE7VzlLtp-4/2.jpg\" alt=\"Youtube Video\" />\r\n        </a>\r\n        <a href=\"http://player.vimeo.com/video/1084537?title=0&amp;byline=0&amp;portrait=0\">\r\n          <img src=\"images/Big_Buck_Bunny.jpg\" alt=\"Vimeo Video\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"flexslider/jquery.flexslider-min.js\";\r\n\r\nexport default class Slider extends Component {\r\n  componentDidMount() {\r\n    window.$(this.refs.flexslider).flexslider({\r\n      animation: \"slide\",\r\n      animationLoop: false,\r\n      itemWidth: 210,\r\n      itemMargin: 5,\r\n      pausePlay: true,\r\n      start: function(slider) {\r\n        window.$(\"body\").removeClass(\"loading\");\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"slider\">\r\n        <div className=\"flexslider carousel\" ref=\"flexslider\">\r\n          <ul className=\"slides\">\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Html5gallery from \"./components/Html5Gallery\";\nimport Slider from \"./components/Slider\";\nimport Lightgallery from \"./components/Lightgallery\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"main\" role=\"main\" className=\"Main\">\n          {/* <h3>Lightgallery</h3>\n          <div className=\"flex-center\">\n            <Lightgallery />\n          </div> */}\n          <h3>Html5Gallery</h3>\n          <div className=\"flex-center\">\n            <Html5gallery />\n          </div>\n          <h3>Flex Slider</h3>\n          <div className=\"flex-center\">\n            <Slider />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\r\n\r\nexport default class Lightgallery extends Component {\r\n  onLightGallery = node => {\r\n    console.log(node);\r\n    this.lightGallery = node;\r\n    setTimeout(() => {\r\n      window.$(node).lightGallery();\r\n    }, 1000);\r\n    // window.$(this.lightGallery).lightGallery({\r\n    //   dynamic: true,\r\n    //   dynamicEl: [\r\n    //     {\r\n    //       src: \"images/Big_Buck_Bunny.mp4\",\r\n    //       thumb: \"1.jpg\",\r\n    //       subHtml: \"<h4>Fading Light</h4><p>Classic view</p>\"\r\n    //     },\r\n    //     {\r\n    //       src: \"images/Big_Buck_Bunny.mp4\",\r\n    //       thumb: \"2.jpg\",\r\n    //       subHtml: \"<h4>Bowness Bay</h4><p>A beautiful Sunrise</p>\"\r\n    //     },\r\n    //     {\r\n    //       src: \"images/Big_Buck_Bunny.mp4\",\r\n    //       thumb: \"3.jpg\",\r\n    //       subHtml: \"<h4>Coniston Calmness</h4><p>Beautiful morning</p>\"\r\n    //     }\r\n    //   ]\r\n    // });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // window\r\n    //   .$(this.lightGallery)\r\n    //   .data(\"lightGallery\")\r\n    //   .destroy(true);\r\n  }\r\n  componentDidMount() {\r\n    // window.$(this.refs.lightGallery).lightGallery();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={{ display: \"none\", id: \"video1\" }}>\r\n          <video className=\"lg-video-object lg-html5\" controls preload=\"none\">\r\n            <source src=\"images/Big_Buck_Bunny.mp4\" type=\"video/mp4\" />\r\n            Your browser does not support HTML5 video.\r\n          </video>\r\n        </div>\r\n        <ul id=\"html5-videos\" ref={this.onLightGallery}>\r\n          <li data-poster=\"images/Big_Buck_Bunny.jpg\" data-sub-html=\"video caption1\" data-html=\"#video1\">\r\n            <img src=\"images/Colourful_Tulip_small.jpg\" />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import \"jquery/dist/jquery.min.js\";\n// import \"lightgallery/dist/js/lightgallery-all.min.js\";\n// import \"lg-fullscreen/dist/lg-fullscreen.min.js\";\n// import \"lg-thumbnail/dist/lg-thumbnail.min.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}