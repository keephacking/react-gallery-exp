{"version":3,"sources":["components/Html5Gallery.js","components/Slider.js","components/ReactImageVideoLightboxDemo.js","App.js","serviceWorker.js","index.js"],"names":["html5gallery","react_default","a","createElement","style","display","className","data-skin","data-width","data-height","href","src","alt","Component","Slider","window","$","this","refs","flexslider","animation","animationLoop","itemWidth","itemMargin","pausePlay","start","slider","removeClass","ref","ReactImageVideoLightboxDemo","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","state","lightboxOpen","_this2","onClick","setState","build_default","data","url","type","altTag","startIndex","showResourceCount","onCloseCallback","App","id","role","ReactImageVideoLightboxDemo_ReactImageVideoLightboxDemo","Html5Gallery_html5gallery","Slider_Slider","Boolean","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.324d3800.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class html5gallery extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"none\" }} className=\"html5gallery\" data-skin=\"horizontal\" data-width=\"480\" data-height=\"272\">\r\n        <a href=\"images/Tulip_large.jpg\">\r\n          <img src=\"images/Tulip_small.jpg\" alt=\"Tulips\" />\r\n        </a>\r\n        <a href=\"images/Swan_large.jpg\">\r\n          <img src=\"images/Swan_small.jpg\" alt=\"Swan on Lake\" />\r\n        </a>\r\n        <a href=\"images/Big_Buck_Bunny.mp4\">\r\n          <img src=\"images/Big_Buck_Bunny.jpg\" alt=\"Big Buck Bunny, Copyright Blender Foundation\" />\r\n        </a>\r\n        <a href=\"http://www.youtube.com/embed/YE7VzlLtp-4\">\r\n          <img src=\"http://img.youtube.com/vi/YE7VzlLtp-4/2.jpg\" alt=\"Youtube Video\" />\r\n        </a>\r\n        <a href=\"http://player.vimeo.com/video/1084537?title=0&amp;byline=0&amp;portrait=0\">\r\n          <img src=\"images/Big_Buck_Bunny.jpg\" alt=\"Vimeo Video\" />\r\n        </a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Slider extends Component {\r\n  componentDidMount() {\r\n    window.$(this.refs.flexslider).flexslider({\r\n      animation: \"slide\",\r\n      animationLoop: false,\r\n      itemWidth: 210,\r\n      itemMargin: 5,\r\n      pausePlay: true,\r\n      start: function(slider) {\r\n        window.$(\"body\").removeClass(\"loading\");\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <section className=\"slider\">\r\n        <div className=\"flexslider carousel\" ref=\"flexslider\">\r\n          <ul className=\"slides\">\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_cheesecake_brownie.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_lemon.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_donut.jpg\" />\r\n            </li>\r\n            <li>\r\n              <img src=\"images/kitchen_adventurer_caramel.jpg\" />\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ReactImageVideoLightbox from \"react-image-video-lightbox\";\r\n\r\nexport default class ReactImageVideoLightboxDemo extends Component {\r\n  constructor() {\r\n    super(...arguments);\r\n\r\n    this.state = {\r\n      lightboxOpen: false\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ lightboxOpen: true });\r\n          }}\r\n        >\r\n          Open Lightbox\r\n        </button>\r\n        {this.state.lightboxOpen && (\r\n          <div className=\"lightbox-modal\">\r\n            <ReactImageVideoLightbox\r\n              data={[\r\n                { url: \"https://placekitten.com/550/500\", type: \"photo\", altTag: \"placeholder image\" },\r\n                { url: \"https://www.youtube.com/embed/ScMzIvxBSi4?rel=0\", type: \"video\", altTag: \"placeholder video\" },\r\n                { url: \"images/Big_Buck_Bunny.mp4\", type: \"video\", altTag: \"placeholder video\" },\r\n                { url: \"https://placekitten.com/620/650\", type: \"photo\", altTag: \"placeholder image\" },\r\n                { url: \"https://placekitten.com/550/500\", type: \"photo\", altTag: \"placeholder image\" },\r\n                { url: \"https://www.youtube.com/embed/ScMzIvxBSi4?rel=0\", type: \"video\", altTag: \"placeholder video\" }\r\n              ]}\r\n              startIndex={0}\r\n              showResourceCount={true}\r\n              onCloseCallback={() => {\r\n                this.setState({ lightboxOpen: false });\r\n              }}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Html5gallery from \"./components/Html5Gallery\";\r\nimport Slider from \"./components/Slider\";\r\nimport ReactImageVideoLightboxDemo from \"./components/ReactImageVideoLightboxDemo\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div id=\"main\" role=\"main\" className=\"Main\">\r\n          <h3>React Image Video Lightbox</h3>\r\n          <div className=\"flex-center\">\r\n            <ReactImageVideoLightboxDemo />\r\n          </div>\r\n          <h3>Html5Gallery</h3>\r\n          <div className=\"flex-center\">\r\n            <Html5gallery />\r\n          </div>\r\n          <h3>Flex Slider</h3>\r\n          <div className=\"flex-center\">\r\n            <Slider />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'flexslider/jquery.flexslider-min.js';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}